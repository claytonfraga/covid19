origem = dfArquivosR[dfArquivosR$codigoR==arquivoOrigem,]$codigo
destinos = dfArquivosR[dfArquivosR$codigoR %in% arquivosDestino,]$codigo
cat("\nOrigem:", origem)
cat("\nDestinos:", destinos)
if (length(destinos)>0) {
for (i in 1:length(destinos)) {
cat("\n\t\tdestino", destinos[i])
mat[origem, destinos[i]] = 1
cat("\nMatriz",mat[origem, destinos[i]], ",")
}
return(mat)
}
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.r$"))))))
names(dfArquivosR) = "codigoR"
dfArquivosR$codigoR = as.character(dfArquivosR$codigoR)
totalArquivos = nrow(dfArquivosR)
matR = matrix(0, nrow = totalArquivos, ncol = totalArquivos)
dfArquivosR$codigo = seq.int(totalArquivos)
matR
arquivo = dfArquivosR$codigoR[2]
arquivo
linhas = readLines(toString(arquivo))
arquivosR = extraiNomeArquivos(linhas)
linhas = readLines(toString(arquivo))
(arquivosR = extraiNomeArquivos(linhas))
arquivo = dfArquivosR$codigoR[3]
linhas = readLines(toString(arquivo))
(arquivosR = extraiNomeArquivos(linhas))
arquivo = dfArquivosR$codigoR[30]
linhas = readLines(toString(arquivo))
(arquivosR = extraiNomeArquivos(linhas))
arquivo = dfArquivosR$codigoR[30]
linhas = readLines(toString(arquivo))
(arquivosR = extraiNomeArquivos(linhas))
( arquivosR = extraiNomeArquivos(linhas))
matR = preencheMatriz(matR, arquivo, arquivosR)
matR[1, 31]
matR = preencheMatriz(mat = matR, arquivo, arquivosR)
matR[1, 31]
matR[1, 31] = 1
matR[1, 31]
source("grafoChamadas.r")
matR
source("grafoChamadas.r")
matR
source("grafoChamadas.r")
matR
remove(matR)
source("grafoChamadas.r")
matR
qgraph(matR)
title("Unweighted and directed graphs", line = 2.5)
qgraph(matR, filetype = "pdf", height = 10, width = 10)
qgraph(matR, edge.label.cex = 1)
title("Unweighted and directed graphs", line = 2.5)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, edge.label.cex = 1)
title("Unweighted and directed graphs", line = 2.5)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, edge.label.cex = )
title("Unweighted and directed graphs", line = 2.5)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, edge.label.cex = 5)
title("Unweighted and directed graphs", line = 2.5)
MATr
matR
qgraph(matR, filetype = "pdf", height = 12, width = 12)
qgraph(matR, filetype = "pdf", height = 20, width = 20)
qgraph(matR, filetype = "pdf", height = 20, width = 20, vsize=2)
qgraph(matR, filetype = "pdf", height = 20, width = 20, vsize=10)
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=10)
matR
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=10)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=10)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=1)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=5)
two <- matrix ( c(0,1,
1,0), nrow=2,
ncol=2)
colnames(two) <- c("Node","Node")
qgraph(two, vsize = 15)
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=5, labels = colnames(m))
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, vsize=5, labels = colnames(matR))
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, labels = colnames(matR))
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, labels = colnames(matR))
qgraph(matR, labels = colnames(matR))
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
qgraph(matR, filetype = "pdf", height = 200, width = 200, labels = colnames(matR))
qgraph(matR, labels = colnames(matR))
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
dfArquivosR
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
dfArquivosR
matR
remove(matR)
source("grafoChamadas.r")
matR
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
matR
dfArquivosR
dfArquivosR$peso = NULL
remove(matR)
source("grafoChamadas.r")
dfArquivosR
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
qgraph(matR, labels = colnames(matR))
remove(matR)
source("grafoChamadas.r")
qgraph(matR, labels = colnames(matR))
remove(matR)
source("grafoChamadas.r")
matR
E <- as.matrix(data.frame(from = rep(1:3, each = 3), to = rep(1:3, 3), width = 1:9))
E
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
df = data.frame(matR)
df
head(df)
table(df)
table(df$agregadoPaises.r)
df
matR
matR[matR>1]
matR[matR>0]
table(df$agregadoPaises.r)
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.*r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*\.r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.\r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.*r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.r^"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.^r"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.$r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("$.*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*\\.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*.r$"))))))
(dfArquivosR = data.frame((arquivos = sort(list.files(path="./", pattern=paste0("^.*\\.r$"))))))
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
remove(matR)
source("grafoChamadas.r")
load("dados/rdata/exp_brazil_estimativa_2020-05-14.RData")
m = retorno$modelo
m
coef(m)
log(2)/coef(m)[1]
log(2)/(coef(m)[1]/100)
require(beepr)
require(rmarkdown)
require(taRifx)
require(Fgmutils)
require(minpack.lm)
require(hydroGOF)
require(lubridate)
require(gridExtra)
require(rvest)
require(tidyverse)
require(dplyr)
require(sqldf)
require(ggplot2)
require(RColorBrewer)
options(warn=-1)
options(width=200)
options(scipen=10000)
options(timeout= 4000000)
t1 = Sys.time()
options(timeout= 4000000)
cat("\n\n")
pasta = "dados/"
pastaBackup = paste0(pasta, "backup/")
pastaRData = paste0(pasta, "rdata/")
pastaDatasets = paste0(pasta, "datasets/")
hoje = Sys.Date()
dadosAtuais = read.csv("https://covid.ourworldindata.org/data/ecdc/total_cases.csv")
write.csv(dadosAtuais, file=paste0(pastaDatasets,"total_cases.csv"), row.names=F)
leWorldometers()
cat("\nExecutando: estima.r para 7 dias...")
dias = 7
estima(palpitesDe = palpitesDe, pais = "United.Kingdom", ndias = dias, tipo="exp")
palpitesDe = "World"
estima(palpitesDe = palpitesDe, pais = "United.Kingdom", ndias = dias, tipo="exp")
estima(palpitesDe = palpitesDe, pais = "United.States", ndias = dias, tipo="exp")
estima(palpitesDe = palpitesDe, pais = "Italy", ndias = dias, tipo="exp")
estima(palpitesDe = palpitesDe, pais = "Spain", ndias = dias, tipo="exp")
estima(palpitesDe = palpitesDe, pais = "Germany", ndias = dias, tipo="exp")
estima(palpitesDe = palpitesDe, pais = "Iran", ndias = dias, tipo="exp")
estima(palpitesDe = palpitesDe, pais = "Belgium", ndias = dias, tipo="exp")
cat("\nExecutando: estimaCombinado.r ...")
source("estimaCombinado.r")
estimaCombinado()
cat("\nExecutando: ggplots.r ...")
source("ggplots.r")
cat("\nExecutando: full_data.r ...")
source("full_data.r")
cat("\nExecutando: graficosLog.r ...")
source("graficosLog.r")
cat("\nExecutando: full_data.r ...")
source("full_data.r")
cat("\nExecutando: plot_final_pais.r ...")
source("plot_final_pais.r")
plotar()
plotar(tipo = "exp")
plotar(tipo = "combinado")
cat("\nExecutando: plot_semanal.r ...")
source("plot_semanal.r")
cat("\nExecutando: plot_paises.r ...")
source("plot_paises.r")
cat("\nExecutando: plot_mortes_paises.r ...")
source("plot_mortes_paises.r")
cat("\nExecutando: plot_mortes_semanais.r ...")
source("plot_mortes_semanais.r")
cat("\nExecutando: horarioAtualizacao.r ...")
source("horarioAtualizacao.r")
cat("\nExecutando: geralinks.r ...")
source("geralinks.r")
cat("\nExecutando: plot_mundo_semanal.r ...")
source("plot_mundo_semanal.r")
cat("\nExecutando: plot_mundo_semanal.r ...")
source("plot_taxacrescimento_mortalidade_semanal.r")
plot_letalidade(3)
plot_letalidade(5)
plot_letalidade(10)
cat("\nExecutando: plot_diferenca_mortes_semanal.r ...")
source("plot_diferenca_mortes_semanal.r")
cat("\nExecutando: plot_taxacrescimento_semanal.r ...")
source("plot_taxacrescimento_semanal.r")
cat("\nExecutando: plot_taxacrescimento_mortes_semanal.r ...")
source("plot_taxacrescimento_mortes_semanal.r")
cat("\nExecutando: plot_diferenca_mortos_mensal.r ...")
source("plot_diferenca_mortos_mensal.r")
cat("\nExecutando: plot_taxacrescimento_mensal.r ...")
source("plot_taxacrescimento_mensal.r")
cat("\nExecutando: plot_agregado.r ...")
source("plot_agregado.r")
cat("\nExecutando: processaWorldProjections.r ...")
source("processaWorldProjections.r")
cat("\nExecutando: processaWorldProjections_Logistico.r ...")
source("processaWorldProjections_Logistico.r")
cat("\nExecutando: brasil.r ...")
source("brasil.r")
dfAgregadoSemanal
source("full_data.r")
dfPareadoBrazil
names(dfPrevisaoBrazil)
head(dfPrevisaoBrazil)
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_united.states_forecast_",hoje,".csv"), stringsAsFactors = F)
dfPrevisao = rbind(dfPrevisao, cbind(data.frame(location = rep("USA", nrow(df))), df))
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_united.states_forecast_",hoje,".csv"), stringsAsFactors = F)
names(df)
names(dfPrevisao)
dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F)
names(dfPrevisao)
head(dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F))
head(dfPrevisao)
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_united.states_forecast_",hoje,".csv"), stringsAsFactors = F)
df
names*(df)
names(df)
dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F)
names(dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F))
names(dfPrevisao)
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_united.states_forecast_",hoje,".csv"), stringsAsFactors = F)
names(dfPrevisao)
names(df)
dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F)
names(dfPrevisao)
dfPrevisao$country = NULL
dfPrevisao$latitude = NULL
dfPrevisao$longitude = NULL
names(df)
names(dfPrevisao)
df1 = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_spain_forecast_",hoje,".csv"), stringsAsFactors = F)
names(df1)
hoje
source("full_data.r")
names(dfPrevisao)
names(df)
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_united.states_forecast_",hoje,".csv"), stringsAsFactors = F)
names(df)
dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F)
dfPrevisao = cbind(data.frame(location = rep("Brazil", nrow(dfPrevisao))), dfPrevisao)
dfPrevisao$country = NULL
dfPrevisao$latitude = NULL
dfPrevisao$longitude = NULL
names(df)
names(dfPrevisao)
dfPrevisao = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_brazil_forecast_",hoje,".csv"), stringsAsFactors = F)
dfPrevisao = cbind(data.frame(location = rep("Brazil", nrow(dfPrevisao))), dfPrevisao)
dfPrevisao$country = NULL
dfPrevisao$latitude = NULL
dfPrevisao$longitude = NULL
dfPrevisao$mortes_confirmadas = NULL
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_united.states_forecast_",hoje,".csv"), stringsAsFactors = F)
dfPrevisao = rbind(dfPrevisao, cbind(data.frame(location = rep("USA", nrow(df))), df))
df = read.csv(paste0("~/MEGA/Projetos/coronavirus/dados/datasets/exp_italy_forecast_",hoje,".csv"), stringsAsFactors = F)
dfPrevisao = rbind(dfPrevisao, cbind(data.frame(location = rep("Italy", nrow(df))), df))
source("full_data.r")
cat("\nExecutando: ggplots.r ...")
source("ggplots.r")
cat("\nExecutando: full_data.r ...")
source("full_data.r")
cat("\nExecutando: graficosLog.r ...")
source("graficosLog.r")
cat("\nExecutando: full_data.r ...")
source("full_data.r")
cat("\nExecutando: plot_final_pais.r ...")
source("plot_final_pais.r")
plotar()
plotar(tipo = "exp")
plotar(tipo = "combinado")
cat("\nExecutando: plot_semanal.r ...")
source("plot_semanal.r")
cat("\nExecutando: plot_paises.r ...")
source("plot_paises.r")
cat("\nExecutando: plot_mortes_paises.r ...")
source("plot_mortes_paises.r")
cat("\nExecutando: plot_mortes_semanais.r ...")
source("plot_mortes_semanais.r")
cat("\nExecutando: horarioAtualizacao.r ...")
source("horarioAtualizacao.r")
cat("\nExecutando: geralinks.r ...")
source("geralinks.r")
cat("\nExecutando: plot_mundo_semanal.r ...")
source("plot_mundo_semanal.r")
cat("\nExecutando: plot_mundo_semanal.r ...")
source("plot_taxacrescimento_mortalidade_semanal.r")
plot_letalidade(3)
plot_letalidade(5)
plot_letalidade(10)
cat("\nExecutando: plot_diferenca_mortes_semanal.r ...")
source("plot_diferenca_mortes_semanal.r")
cat("\nExecutando: plot_taxacrescimento_semanal.r ...")
source("plot_taxacrescimento_semanal.r")
cat("\nExecutando: plot_taxacrescimento_mortes_semanal.r ...")
source("plot_taxacrescimento_mortes_semanal.r")
cat("\nExecutando: plot_diferenca_mortos_mensal.r ...")
source("plot_diferenca_mortos_mensal.r")
cat("\nExecutando: plot_taxacrescimento_mensal.r ...")
source("plot_taxacrescimento_mensal.r")
cat("\nExecutando: plot_agregado.r ...")
source("plot_agregado.r")
cat("\nExecutando: processaWorldProjections.r ...")
source("processaWorldProjections.r")
cat("\nExecutando: processaWorldProjections_Logistico.r ...")
source("processaWorldProjections_Logistico.r")
cat("\nExecutando: brasil.r ...")
source("brasil.r")
##Brasil
cat("\nGerando estatisticas de comparacao dos modelos utilizados nas projecoes.r ...")
source("processaComparacaoModelosBarra.r")
cat("\nCopiando full_data ...")
origem = "~/MEGA/Projetos/coronavirus/dados/datasets/full_data.csv"
destino = "~/MEGA/Projetos/coronavirus/dados/datasets/git/full_data.csv"
file.copy(origem, destino, overwrite = T)
gc()
atual <- ymd_hms(Sys.time(), tz = "America/Sao_Paulo")
desejado <- ymd_hms(paste0(Sys.Date(), " ", "19:30:00"), tz = "America/Sao_Paulo")
if (atual>=desejado) {
source("todosRecuperados.r")
source("todos.r")
} else {
cat("\nAinda nao esta na hora de gerar graficos de pacientes recuperados e \nde todos os paises", format(desejado, format = "%d/%m/%Y, %H:%M"), " atual:", format(atual, format = "%d/%m/%Y, %H:%M"))
}
#print(tempo)
cat("\nProcessamento coronavirus.r terminando em: ", format(Sys.time(), format = "%d/%m/%Y %H:%M:%S"), "\n")
file.remove(origemBrasil)
removeBackup()
cat("\nExecutando: plot_final_pais.r ...")
source("plot_final_pais.r")
plotar()
plotar(tipo = "exp")
plotar(tipo = "combinado")
gc()
cat("\nExecutando: plot_final_pais.r ...")
source("plot_final_pais.r")
plotar()
plotar(tipo = "exp")
plotar(tipo = "combinado")
